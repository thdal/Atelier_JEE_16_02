package fr.epsi.dao;

import fr.epsi.entite.Idee;
import fr.epsi.entite.Roles;
import fr.epsi.entite.User;
import fr.epsi.entite.Vote;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import javax.persistence.EntityManager;
import javax.transaction.HeuristicMixedException;
import javax.transaction.HeuristicRollbackException;
import javax.transaction.NotSupportedException;
import javax.transaction.RollbackException;
import javax.transaction.SystemException;
import javax.transaction.Transactional;
import javax.transaction.UserTransaction;

public class IdeeDaoImpl implements IdeeDao{
	
	EntityManager em;
	UserTransaction utx;
	public IdeeDaoImpl(EntityManager em, UserTransaction utx) {
		this.em=em;
		this.utx=utx;
	}

	public void create(Idee i) {
		
			try {
				utx.begin();
				em.persist(i);
				utx.commit();
			} catch (NotSupportedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SystemException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SecurityException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalStateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (RollbackException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (HeuristicMixedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (HeuristicRollbackException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}	
	}
	
	public List<Idee> getIdeesList(){	    
	    	List<Idee> idees = em.createQuery("select i from Idee i", Idee.class).getResultList();	   
		    return idees;
	}
	
	public List<Idee> getIdeesListSortByPercent(){	    
    	List<Idee> idees = em.createQuery("select i from Idee i order by i.topPercentage desc", Idee.class)
    			.setMaxResults(3)
    			.getResultList();	   
	    return idees;
	}
	
	public Map<Long, Integer > getIdeesListSortByTopUserWriters(){	    
    	List<Object[]> idees = em.createQuery("select i. , count(i.user.id) AS cnt from Idee i GROUP by i", Object[].class)
    			.setMaxResults(3)
    			.getResultList();	   
    	
    	Map<Long, Integer > postCountByYearMap = em
    			.createQuery(
    					"select i.user.id as userid , count(i.user.id) AS cnt from Idee i GROUP by i", Idee.class)
    			.getResultStream()
    			.collect(
    			    Collectors.toMap(
    			        tuple -> ((Number) tuple.get("cnt")).LongValue(),
    			        tuple -> ((Number) tuple.get("userid")).intValue()
    			    )
    			);
    	
    	
	    return idees;
	}

	public void setVote(Vote vote,long id) {
		try {
			utx.begin();
			Idee idee = em.find(Idee.class, id);
			//idee.setVote(vote);
			em.persist(idee);
			utx.commit();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalStateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (RollbackException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (HeuristicMixedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (HeuristicRollbackException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();		
		} catch (NotSupportedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SystemException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
		
	}
	
	@Transactional
	public void setPercent(int percent, long ideeId) {
		try {
			utx.begin();
			Idee idee = em.find(Idee.class, ideeId);
			System.out.println("idenullservice?");
			System.out.println(idee.getId());

			idee.setTopPercentage(percent);
			em.persist(idee);
			utx.commit();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalStateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (RollbackException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (HeuristicMixedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (HeuristicRollbackException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();		
		} catch (NotSupportedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SystemException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
	}
	
	public Idee getIdee(Long ideeId) {
		// TODO Auto-generated method stub
		Idee idee = em.find(Idee.class, ideeId);
		return idee;
	}

}
